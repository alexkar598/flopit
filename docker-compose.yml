name: "flopit"
services:
  devserver:
    build:
      dockerfile: dev.Dockerfile
    networks:
      - backend
    volumes:
      - ./server/src:/app/server/src
      - ./client/src:/app/client/src
      - ./shared:/app/shared
      - mariadb-import:/db-import
    environment:
      PRISMA_MARIADB_URL: ${PRISMA_MARIADB_URL}
      PRISMA_ROOT_MARIADB_URL: ${PRISMA_ROOT_MARIADB_URL}
      REDIS_URL: redis://redis
      JWT_SIGNING_KEY: ${JWT_SIGNING_KEY}
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
      db-deploy:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    links:
      - mariadb
      - minio
      - redis
    healthcheck:
      test: [ "CMD", "sh", "-c", "wget localhost:3000/health -O - && wget localhost:4200 -O -"]
      timeout: "10s"
      interval: "1m30s"
      retries: 3
      start_period: 40s
      start_interval: 1s
  nginx:
    image: nginx:1.25.3-alpine-slim
    networks:
      - backend
    links:
      - cloudbeaver
      - minio
      - imgproxy
      - devserver:apiserver
      - devserver:client
    configs:
      - source: nginx
        target: /etc/nginx/nginx.conf
    restart: unless-stopped
    ports:
      - 8080:80
  mariadb:
    build:
      dockerfile: mariadb.Dockerfile
      context: compose
    healthcheck:
      test: [
        "CMD",
        "healthcheck.sh",
        "--su-mysql",
        "--connect",
        "--innodb_initialized"
      ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 1s
    networks:
      - backend
    restart: unless-stopped
    environment:
      MARIADB_AUTO_UPGRADE: 1
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DB}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      - mariadb:/var/lib/mysql
      - mariadb-import:/import
  redis:
    image: redis:7.0-alpine3.19
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 1s
    networks:
      - backend
    restart: unless-stopped
    volumes:
      - redis:/data
    environment:
      REDIS_ARGS: "--timeout 90"
  cloudbeaver:
    image: dbeaver/cloudbeaver:23.3.3
    configs:
      - source: cloudbeaver
        target: /opt/cloudbeaver/conf/cloudbeaver.conf
      - source: cloudbeaver-datasource
        target: /opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver/data-sources-template.json
    volumes:
      - cloudbeaver:/opt/cloudbeaver/workspace
    links:
      - mariadb
    networks:
      - backend
    restart: unless-stopped
    entrypoint: ["/bin/bash", "-c", "
      cp /opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver/data-sources-template.json /opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver/data-sources.json;
      sed -i 's/MARIADB_DB/${MARIADB_DB}/g' /opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver/data-sources.json;
      sed -i 's/MARIADB_ROOT_PASSWORD/${MARIADB_ROOT_PASSWORD}/g' /opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver/data-sources.json;
      /opt/cloudbeaver/run-server.sh;
    "]
    environment:
      CB_SERVER_NAME: Base de donnÃ©es Flopit
      CB_SERVER_URL: ${PUBLIC_URL}/_db
      CB_ADMIN_NAME: _
      CB_ADMIN_PASSWORD: _
  minio:
    image: minio/minio:RELEASE.2024-02-04T22-36-13Z
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 1s
    command: ["minio", "server", "/data", "--console-address", ":9001"]
    networks:
      - backend
    volumes:
      - minio:/data
    restart: unless-stopped
    environment:
      MINIO_SCANNER_SPEED: slowest
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
      MINIO_SITE_REGION: ${S3_REGION}
  createbuckets:
    image: minio/mc:RELEASE.2024-01-31T08-59-40Z
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - backend
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      /usr/bin/mc mb minio/attachment-images;
      exit 0;"
  imgproxy:
    links:
      - minio
    image: darthsim/imgproxy:v3.21.0
    healthcheck:
      test: [ "CMD", "imgproxy", "health" ]
      timeout: "10s"
      interval: "1m30s"
      retries: 3
      start_period: 40s
      start_interval: 1s
    networks:
      - backend
    restart: unless-stopped
    environment:
      IMGPROXY_KEY: ${IMGPROXY_KEY}
      IMGPROXY_SALT: ${IMGPROXY_SALT}
      IMGPROXY_QUALITY: 85
      IMGPROXY_WORKERS: 8
      IMGPROXY_REQUESTS_QUEUE_SIZE: 32
      IMGPROXY_PATH_PREFIX: '/image/'
      IMGPROXY_ENABLE_DEBUG_HEADERS: true
      IMGPROXY_DEVELOPMENT_ERRORS_MODE: true
      IMGPROXY_MAX_SRC_RESOLUTION: 40 #megapixels
      IMGPROXY_MAX_SRC_FILE_SIZE: 10485760
      IMGPROXY_MAX_ANIMATION_FRAMES: 24
      IMGPROXY_ALLOW_ORIGIN: "*"
      IMGPROXY_ALLOWED_SOURCES: s3://, https://
      IMGPROXY_JPEG_PROGRESSIVE: true
      IMGPROXY_USE_S3: true
      IMGPROXY_S3_ENDPOINT: http://minio:9000/
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_KEY}
      IMGPROXY_S3_REGION: ${S3_REGION}
      IMGPROXY_MALLOC: tcmalloc
  db-deploy:
    build:
      dockerfile: server/db-deploy.Dockerfile
    networks:
      - backend
    environment:
      PRISMA_MARIADB_URL: ${PRISMA_ROOT_MARIADB_URL}
    restart: on-failure
    depends_on:
      mariadb:
        condition: service_healthy
    links:
      - mariadb
  seed:
    profiles: ["seed"]
    build:
      dockerfile: server/seed.Dockerfile
    networks:
      - backend
    restart: on-failure
    depends_on:
      devserver:
        condition: service_healthy
    links:
      - devserver:apiserver
networks:
  backend:
volumes:
  cloudbeaver:
  mariadb:
  mariadb-import:
  minio:
  redis:
configs:
  nginx:
    file: compose/nginx.conf
  cloudbeaver:
    file: compose/cloudbeaver/config.json5
  cloudbeaver-datasource:
    file: compose/cloudbeaver/datasources.json